[{"D:\\project\\CV-Generator\\frontend\\src\\index.js":"1","D:\\project\\CV-Generator\\frontend\\src\\App.js":"2","D:\\project\\CV-Generator\\frontend\\src\\reportWebVitals.js":"3","D:\\project\\CV-Generator\\frontend\\src\\components\\NavBar\\NavBar.js":"4","D:\\project\\CV-Generator\\frontend\\src\\components\\resume\\resume.js":"5","D:\\project\\CV-Generator\\frontend\\src\\components\\form\\form.js":"6","D:\\project\\CV-Generator\\frontend\\src\\components\\Loader.js":"7","D:\\project\\CV-Generator\\frontend\\src\\components\\CustomDatePicker.js":"8"},{"size":438,"mtime":1693067636210,"results":"9","hashOfConfig":"10"},{"size":543,"mtime":1693067636204,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1693067636210,"results":"12","hashOfConfig":"10"},{"size":1128,"mtime":1693428367938,"results":"13","hashOfConfig":"10"},{"size":12835,"mtime":1694362810002,"results":"14","hashOfConfig":"10"},{"size":19219,"mtime":1694362731373,"results":"15","hashOfConfig":"10"},{"size":375,"mtime":1694338089338,"results":"16","hashOfConfig":"10"},{"size":980,"mtime":1694349208197,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"pucnfa",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\CV-Generator\\frontend\\src\\index.js",[],["37","38"],"D:\\project\\CV-Generator\\frontend\\src\\App.js",[],"D:\\project\\CV-Generator\\frontend\\src\\reportWebVitals.js",[],"D:\\project\\CV-Generator\\frontend\\src\\components\\NavBar\\NavBar.js",[],"D:\\project\\CV-Generator\\frontend\\src\\components\\resume\\resume.js",["39","40"],"import { useState, useEffect, Fragment } from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport { FaLinkedin, FaGithubSquare } from \"react-icons/fa\";\r\nimport { BiLink } from \"react-icons/bi\";\r\nimport axios from \"axios\";\r\nimport html2pdf from \"html2pdf.js\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\nimport \"katex/dist/katex.min.css\";\r\nimport { saveAs } from \"file-saver\";\r\nimport LoadingScreen from \"../Loader\";\r\n\r\nconst ResumeComponent = ({ match }) => {\r\n  const [userResumeData, setUserResumeData] = useState({});\r\n  const [mounted, setMounted] = useState(false);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchedData = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          // `https://guptakeshav0828-ni7v5xkfha-em.a.run.app/api/${match.params.id}`\r\n          // `http://localhost:5000/api/${match.params.id}`\r\n          `https://rutkarcvgen-vnhyhpggya-em.a.run.app/api/${match.params.id}`\r\n        );\r\n        if (res.data.success) {\r\n          setMounted(true);\r\n          setUserResumeData(res.data.resumeData);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchedData();\r\n  }, [match.params.id]);\r\n\r\n  const handleOnPrint = () => {\r\n    const element = document.getElementById(\"resume\");\r\n\r\n    // Create a function to set up the pdf generation\r\n    const generatePdf = async () => {\r\n      // Calculate the scale factor based on the page size and content size\r\n      const pageWidth = 8.5; // Letter page width in inches\r\n      const pageHeight = 11; // Letter page height in inches\r\n      const elementWidth = element.offsetWidth;\r\n      const elementHeight = element.offsetHeight;\r\n      const scale = Math.min(\r\n        pageWidth / elementWidth,\r\n        pageHeight / elementHeight\r\n      );\r\n\r\n      // Create a canvas element to render the content\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = pageWidth * 96; // 96 DPI\r\n      canvas.height = pageHeight * 96;\r\n      const context = canvas.getContext(\"2d\");\r\n\r\n      // Scale and draw the content on the canvas\r\n      context.scale(scale * 96, scale * 96); // Scale to DPI\r\n      await html2canvas(element, { canvas: canvas });\r\n      // canvas.backgroundColor = \"null\";\r\n\r\n      // Convert the canvas to a PDF\r\n      const pdf = new jsPDF(\"portrait\", \"in\", [pageWidth, pageHeight]);\r\n      pdf.addImage(\r\n        canvas.toDataURL(\"image/jpeg\", 1.0),\r\n        \"JPEG\",\r\n        0,\r\n        0,\r\n        pageWidth,\r\n        pageHeight\r\n      );\r\n\r\n      // Save or open the PDF\r\n      pdf.save(\"resume.pdf\");\r\n    };\r\n\r\n    // Call the generatePdf function to create and save the PDF\r\n    generatePdf();\r\n  };\r\n\r\n  const handleOnPrint1 = () => {\r\n    var element = document.getElementById(\"resume\");\r\n    const pageWidth = 8.5; // Letter page width in inches\r\n    const pageHeight = 11; // Letter page height in inches\r\n    const elementWidth = element.offsetWidth;\r\n    const elementHeight = element.offsetHeight;\r\n    const scale = Math.min(\r\n      pageWidth / elementWidth,\r\n      pageHeight / elementHeight\r\n    );\r\n\r\n    var opt = {\r\n      margin: 0,\r\n      filename: \"resume.pdf\",\r\n      image: { type: \"jpeg\", quality: 0.98 },\r\n      html2canvas: {\r\n        scale: scale,\r\n        height: pageWidth * 96,\r\n        width: pageWidth * 96,\r\n      },\r\n      // html2canvas: { dpi: 192, letterRendering: true },\r\n      jsPDF: { unit: \"in\", format: \"letter\", orientation: \"portrait\" },\r\n    };\r\n    html2pdf().set(opt).from(element).save();\r\n    // html2pdf(\"hellWorld \").save();\r\n    // window.print();\r\n  };\r\n\r\n  const handleOnPrint2 = async () => {\r\n    try {\r\n      setIsFetching(true);\r\n      const response = await axios.get(\r\n        // `http://localhost:5000/api/pdf/${match.params.id}`,\r\n        `https://rutkarcvgen-vnhyhpggya-em.a.run.app/api/pdf/${match.params.id}`,\r\n        {\r\n          responseType: \"blob\", // Set responseType to 'blob' to receive binary data\r\n        }\r\n      );\r\n      setIsFetching(false);\r\n\r\n      // Extract the file name from the response headers (if available)\r\n      const contentDisposition = response.headers[\"content-disposition\"];\r\n      const fileNameMatch =\r\n        contentDisposition && contentDisposition.match(/filename=\"(.+)\"/);\r\n\r\n      // Determine the file name for saving\r\n      const fileName = fileNameMatch ? fileNameMatch[1] : \"Resume.pdf\";\r\n\r\n      // Use FileSaver.js to trigger the download\r\n      saveAs(new Blob([response.data], { type: \"application/pdf\" }), fileName);\r\n    } catch (error) {\r\n      setIsFetching(false);\r\n      console.error(\"Error downloading PDF:\", error);\r\n    } finally {\r\n      setIsFetching(false); // Hide the loading overlay\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {mounted ? (\r\n        <Container className=\"mt-4 mb-2\">\r\n          <LoadingScreen isLoading={isFetching} />\r\n          <main id=\"resume\" className=\"resume-section pl-4\">\r\n            <header>\r\n              <Row className=\"border-bottom border-dark w-100\">\r\n                <Col sm={12} md={6} className=\"py-4 px-4\">\r\n                  <h1 className=\"text-dark font-weight-bold\">\r\n                    {userResumeData.userFirstName}{\" \"}\r\n                    {userResumeData.userSecondName}\r\n                  </h1>\r\n                  <h4 className=\"h5 text-dark\">\r\n                    {userResumeData.userProfession}\r\n                  </h4>\r\n                  <div className=\"w-25 d-flex justify-content-between user-social-icons\">\r\n                    <a\r\n                      href={\r\n                        String(userResumeData.userLinkedInProfile).startsWith(\r\n                          \"http\"\r\n                        )\r\n                          ? userResumeData.userLinkedInProfile\r\n                          : `https://${userResumeData.userLinkedInProfile}`\r\n                      }\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                      className=\"text-dark\"\r\n                    >\r\n                      <FaLinkedin />\r\n                    </a>\r\n\r\n                    <a\r\n                      href={\r\n                        String(userResumeData.userPortfolioWebsite).startsWith(\r\n                          \"http\"\r\n                        )\r\n                          ? userResumeData.userPortfolioWebsite\r\n                          : `https://${userResumeData.userPortfolioWebsite}`\r\n                      }\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                      className=\"text-dark\"\r\n                    >\r\n                      <BiLink />\r\n                    </a>\r\n\r\n                    <a\r\n                      href={\r\n                        String(userResumeData.userGitHubProfile).startsWith(\r\n                          \"http\"\r\n                        )\r\n                          ? userResumeData.userGitHubProfile\r\n                          : `https://${userResumeData.userGitHubProfile}`\r\n                      }\r\n                      target=\"_blank\"\r\n                      className=\"text-dark\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      <FaGithubSquare />\r\n                    </a>\r\n                  </div>\r\n                </Col>\r\n                <Col sm={12} md={6}>\r\n                  <p className=\"py-4 text-dark\">\r\n                    {userResumeData.userProfileDescription}\r\n                  </p>\r\n                </Col>\r\n                <Col sm={12} md={6} className=\"my-4\">\r\n                  <ul>\r\n                    <li className=\"d-flex align-items justify-content-start\">\r\n                      <h6 className=\"font-weight-bold text-dark\">\r\n                        Email Address:\r\n                      </h6>\r\n                      <p className=\"px-2\">{userResumeData.userEmail}</p>\r\n                    </li>\r\n                  </ul>\r\n                </Col>\r\n                <Col sm={12} md={6} className=\"my-4\">\r\n                  <ul>\r\n                    <li className=\"d-flex align-items justify-content-start\">\r\n                      <h6 className=\"font-weight-bold text-dark\">\r\n                        Phone Number:\r\n                      </h6>\r\n                      <p className=\"px-2\">{userResumeData.userPhoneNumber}</p>\r\n                    </li>\r\n                  </ul>\r\n                </Col>\r\n              </Row>\r\n            </header>\r\n            <Row className=\"border-bottom border-dark w-100\">\r\n              <h1 className=\"text-center text-dark w-100 pt-4 font-weight-bold\">\r\n                Educational Info\r\n              </h1>\r\n              <ul>\r\n                <li>\r\n                  <Col>\r\n                    <h3 className=\"text-dark font-weight-bold\">High School</h3>\r\n                    <h6 className=\"text-dark font-weight-bold\">\r\n                      {userResumeData.userHighSchName}\r\n                    </h6>\r\n                    <p className=\"text-dark font-weight-bold\">\r\n                      {userResumeData.userHighSchStartDate} -\r\n                      {userResumeData.userHighSchEndDate}\r\n                    </p>\r\n                    <p className=\"text-dark font-weight-normal\">\r\n                      {userResumeData.userHighSchPercentage}% -{\" \"}\r\n                      {userResumeData.userHighSchLoc}\r\n                    </p>\r\n                  </Col>\r\n                </li>\r\n                <li>\r\n                  <Col>\r\n                    <h3 className=\"text-dark font-weight-bold\">\r\n                      {userResumeData.userCollegeDegreeName}\r\n                    </h3>\r\n                    <h6 className=\"text-dark font-weight-bold\">\r\n                      {userResumeData.userCollegeName}\r\n                    </h6>\r\n                    <p className=\"text-dark font-weight-bold\">\r\n                      {userResumeData.userCollegeStartingDate} -\r\n                      {userResumeData.userCollegeEndingDate}\r\n                    </p>\r\n                    <p className=\"text-dark font-weight-normal\">\r\n                      GPA: {userResumeData.userCollegeGpa} -{\" \"}\r\n                      {userResumeData.userCollegeLoc}\r\n                    </p>\r\n                  </Col>\r\n                </li>\r\n              </ul>\r\n            </Row>\r\n            <Row className=\"w-100\">\r\n              <h1 className=\"text-center text-dark w-100 pt-4 font-weight-bold\">\r\n                Professional Info\r\n              </h1>\r\n              <Col className=\"py-4\">\r\n                <ul>\r\n                  <li>\r\n                    <h3 className=\"text-dark font-weight-bold\">\r\n                      {userResumeData.user1stJobRole}\r\n                    </h3>\r\n                    <h6 className=\"text-dark font-weight-bold\">\r\n                      {userResumeData.user1stCompanyName}\r\n                    </h6>\r\n                    <p className=\"text-dark font-weight-bold\">\r\n                      {userResumeData.user1stExpStartDate} -{\" \"}\r\n                      {userResumeData.user1stExpEndDate}\r\n                    </p>\r\n                    <p className=\"text-dark font-weight-normal\">\r\n                      {userResumeData.user1stJobDesc} -{\" \"}\r\n                      {userResumeData.user1stLoc}\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <h3 className=\"text-dark font-weight-bold\">\r\n                      {userResumeData.user2ndJobRole}\r\n                    </h3>\r\n                    <h6 className=\"text-dark font-weight-bold\">\r\n                      {userResumeData.user2ndCompanyName}\r\n                    </h6>\r\n                    <p className=\"text-dark font-weight-bold\">\r\n                      {userResumeData.user2ndExpStartDate} -{\" \"}\r\n                      {userResumeData.user2ndExpEndDate}\r\n                    </p>\r\n                    <p className=\"text-dark font-weight-normal\">\r\n                      {userResumeData.user2ndJobDesc} -{\" \"}\r\n                      {userResumeData.user2ndLoc}\r\n                    </p>\r\n                  </li>\r\n                </ul>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <h1 className=\"w-100\"> Skills </h1>\r\n              <Col>\r\n                <p>Tech: {userResumeData.userTechSkills}</p>\r\n              </Col>\r\n              <Col>\r\n                <p>Soft: {userResumeData.userSoftSkills}</p>\r\n              </Col>\r\n            </Row>\r\n          </main>\r\n\r\n          <Button\r\n            variant=\"dark\"\r\n            as={Col}\r\n            sm={12}\r\n            className=\"py-2 my-3 text-white font-weight-bold\"\r\n            onClick={handleOnPrint2}\r\n          >\r\n            Print\r\n          </Button>\r\n        </Container>\r\n      ) : (\r\n        \"Loading.....\"\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ResumeComponent;\r\n","D:\\project\\CV-Generator\\frontend\\src\\components\\form\\form.js",["41","42"],"import {\r\n  Container,\r\n  Form,\r\n  Col,\r\n  FormGroup,\r\n  FormLabel,\r\n  FormControl,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst FormComponent = ({ history }) => {\r\n  const [userFirstName, setUserFirstName] = useState(\"\");\r\n  const [userSecondName, setUserSecondName] = useState(\"\");\r\n  const [userProfession, setUserProfession] = useState(\"\");\r\n  const [userPhoneNumber, setUserPhoneNumber] = useState(\"\");\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userProfileDescription, setUserProfileDescription] = useState(\"\");\r\n  const [userPortfolioWebsite, setUserPortfolioWebsite] = useState(\"\");\r\n  const [userGitHubProfile, setUserGitHubProfile] = useState(\"\");\r\n  const [userLinkedInProfile, setUserLinkedInProfile] = useState(\"\");\r\n  const [userCollegeDegreeName, setUserCollegeDegreeName] = useState(\"\");\r\n  const [userCollegeName, setUserCollegeName] = useState(\"\");\r\n  const [userCollegeStartingDate, setUserCollegeStartingDate] = useState(\"\");\r\n  const [userCollegeEndingDate, setUserCollegeEndingDate] = useState(\"\");\r\n  const [userCollegeGpa, setUserCollegeGpa] = useState(\"\");\r\n  const [userCollegeLoc, setUserCollegeLoc] = useState(\"\");\r\n  const [userHighSchName, setUserHighSchName] = useState(\"\");\r\n  const [userHighSchStartDate, setUserHighSchStartDate] = useState(\"\");\r\n  const [userHighSchEndDate, setUserHighSchEndDate] = useState(\"\");\r\n  const [userHighSchPercentage, setUserHighSchPercentage] = useState(\"\");\r\n  const [userHighSchLoc, setUserHighSchLoc] = useState(\"\");\r\n  const [userTechSkills, setUserTechSkills] = useState(\"\");\r\n  const [userSoftSkills, setUserSoftSkills] = useState(\"\");\r\n  const [user1stJobRole, setUser1stJobRole] = useState(\"\");\r\n  const [user1stCompanyName, setUser1stCompanyName] = useState(\"\");\r\n  const [user1stExpStartDate, setUser1stExpStartDate] = useState(\"\");\r\n  const [user1stExpEndDate, setUser1stExpEndDate] = useState(\"\");\r\n  const [user1stLoc, setUser1stLoc] = useState(\"\");\r\n  const [user1stJobDesc, setUser1stJobDesc] = useState(\"\");\r\n  const [user2ndJobRole, setUser2ndJobRole] = useState(\"\");\r\n  const [user2ndCompanyName, setUser2ndCompanyName] = useState(\"\");\r\n  const [user2ndExpStartDate, setUser2ndExpStartDate] = useState(\"\");\r\n  const [user2ndExpEndDate, setUser2ndExpEndDate] = useState(\"\");\r\n  const [user2ndLoc, setUser2ndLoc] = useState(\"\");\r\n  const [user2ndJobDesc, setUser2ndJobDesc] = useState(\"\");\r\n  const [userProj1Name, setUserProj1Name] = useState(\"\");\r\n  const [userProj1Description, setUserProj1Description] = useState(\"\");\r\n  const [userProj1Link, setUserProj1Link] = useState(\"\");\r\n  const [userProj2Name, setUserProj2Name] = useState(\"\");\r\n  const [userProj2Description, setUserProj2Description] = useState(\"\");\r\n  const [userProj2Link, setUserProj2Link] = useState(\"\");\r\n\r\n  // Handle change function\r\n  const handleChange = (e, setStateFunction) => {\r\n    setStateFunction(e.target.value);\r\n  };\r\n\r\n  // sum up all the information into one object\r\n  const handleUserResumeData = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    await axios\r\n      // .post(\"https://guptakeshav0828-ni7v5xkfha-em.a.run.app/api\", {\r\n        // .post(\"http://localhost:5000/api\", {\r\n\r\n      .post(\"https://rutkarcvgen-vnhyhpggya-em.a.run.app/api\", {\r\n        userFirstName,\r\n        userSecondName,\r\n        userProfession,\r\n        userPhoneNumber,\r\n        userEmail,\r\n        userProfileDescription,\r\n        userPortfolioWebsite,\r\n        userGitHubProfile,\r\n        userLinkedInProfile,\r\n        userCollegeDegreeName,\r\n        userCollegeName,\r\n        userCollegeStartingDate,\r\n        userCollegeEndingDate,\r\n        userCollegeGpa,\r\n        userCollegeLoc,\r\n        userHighSchName,\r\n        userHighSchStartDate,\r\n        userHighSchEndDate,\r\n        userHighSchPercentage,\r\n        userHighSchLoc,\r\n        userTechSkills,\r\n        userSoftSkills,\r\n        user1stJobRole,\r\n        user1stCompanyName,\r\n        user1stExpStartDate,\r\n        user1stExpEndDate,\r\n        user1stLoc,\r\n        user1stJobDesc,\r\n        user2ndJobRole,\r\n        user2ndCompanyName,\r\n        user2ndExpStartDate,\r\n        user2ndExpEndDate,\r\n        user2ndLoc,\r\n        user2ndJobDesc,\r\n        userProj1Name,\r\n        userProj1Description,\r\n        userProj1Link,\r\n        userProj2Name,\r\n        userProj2Description,\r\n        userProj2Link,\r\n\r\n        //\r\n      })\r\n      .then((res) => {\r\n        if (res.data.success) {\r\n          history.push(`/view_resume/${res.data.resumeData._id}`);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <Container className=\"mt-5 mb-2\">\r\n      <Form className=\"form-section\">\r\n        <h1 className=\"text-dark font-weight-bold py-3\">General Detail</h1>\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel>First Name</FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              onChange={(e) => handleChange(e, setUserFirstName)}\r\n              value={userFirstName}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel>Last Name</FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Last Name\"\r\n              onChange={(e) => handleChange(e, setUserSecondName)}\r\n              value={userSecondName}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel>user Profession</FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"userProfession\"\r\n              onChange={(e) => handleChange(e, setUserProfession)}\r\n              value={userProfession}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Mobile Phone </FormLabel>\r\n            <FormControl\r\n              type=\"number\"\r\n              placeholder=\"+01234 56789\"\r\n              onChange={(e) => handleChange(e, setUserPhoneNumber)}\r\n              value={userPhoneNumber}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Email </FormLabel>\r\n            <FormControl\r\n              type=\"email\"\r\n              placeholder=\"info@domain.com\"\r\n              onChange={(e) => handleChange(e, setUserEmail)}\r\n              value={userEmail}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12}>\r\n            <Form.Label>Profile description</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={6}\r\n              onChange={(e) => handleChange(e, setUserProfileDescription)}\r\n              value={userProfileDescription}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n\r\n        <h1 className=\"text-dark font-weight-bold py-4\">Social Detail</h1>\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel>Portfolio Website URL</FormLabel>\r\n            <FormControl\r\n              type=\"href\"\r\n              onChange={(e) => handleChange(e, setUserPortfolioWebsite)}\r\n              value={userPortfolioWebsite}\r\n              required\r\n            ></FormControl>\r\n          </FormGroup>\r\n\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel>Github Profile URL</FormLabel>\r\n            <FormControl\r\n              type=\"href\"\r\n              onChange={(e) => handleChange(e, setUserGitHubProfile)}\r\n              value={userGitHubProfile}\r\n              required\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel>LinkedIn Profile URL</FormLabel>\r\n            <FormControl\r\n              type=\"href\"\r\n              onChange={(e) => handleChange(e, setUserLinkedInProfile)}\r\n              value={userLinkedInProfile}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n\r\n        <h1 className=\"text-dark font-weight-bold py-4\">Education</h1>\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> College Name </FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserCollegeName)}\r\n              value={userCollegeName}\r\n              required\r\n            ></FormControl>\r\n          </FormGroup>\r\n\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> College Degree Name</FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserCollegeDegreeName)}\r\n              value={userCollegeDegreeName}\r\n              required\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> College Gpa</FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserCollegeGpa)}\r\n              value={userCollegeGpa}\r\n              required\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> College Location</FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserCollegeLoc)}\r\n              value={userCollegeLoc}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Start Date</FormLabel>\r\n            <FormControl\r\n              type=\"date\"\r\n              onChange={(e) => handleChange(e, setUserCollegeStartingDate)}\r\n              value={userCollegeStartingDate}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> End Date</FormLabel>\r\n            <FormControl\r\n              type=\"date\"\r\n              onChange={(e) => handleChange(e, setUserCollegeEndingDate)}\r\n              value={userCollegeEndingDate}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n        <h3>High school details</h3>\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> High School Name </FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserHighSchName)}\r\n              value={userHighSchName}\r\n              required\r\n            ></FormControl>\r\n          </FormGroup>\r\n\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> High School Percentage</FormLabel>\r\n            <FormControl\r\n              type=\"number\"\r\n              onChange={(e) => handleChange(e, setUserHighSchPercentage)}\r\n              value={userHighSchPercentage}\r\n              required\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> High Sc Location</FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserHighSchLoc)}\r\n              value={userHighSchLoc}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Start Date</FormLabel>\r\n            <FormControl\r\n              type=\"date\"\r\n              onChange={(e) => handleChange(e, setUserHighSchStartDate)}\r\n              value={userHighSchStartDate}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> End Date</FormLabel>\r\n            <FormControl\r\n              type=\"date\"\r\n              onChange={(e) => handleChange(e, setUserHighSchEndDate)}\r\n              value={userHighSchEndDate}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n\r\n        <h1 className=\"text-dark font-weight-bold py-4\">Education</h1>\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Technical Skills</FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserTechSkills)}\r\n              value={userTechSkills}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Soft Skills</FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserSoftSkills)}\r\n              value={userSoftSkills}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n\r\n        <h1 className=\"text-dark font-weight-bold py-4\">Experience</h1>\r\n        <h4 className=\"text-dark font-weight-bold py-4\">1st Job</h4>\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Company Name </FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUser1stCompanyName)}\r\n              value={user1stCompanyName}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Job Role</FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUser1stJobRole)}\r\n              value={user1stJobRole}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          {/* <FormGroup as={Col} sm={12} md={4}> */}\r\n          <FormLabel> Job description</FormLabel>\r\n          <FormControl\r\n            as=\"textarea\"\r\n            onChange={(e) => handleChange(e, setUser1stJobDesc)}\r\n            value={user1stJobDesc}\r\n            required\r\n          />\r\n          {/* </FormGroup> */}\r\n        </Form.Row>\r\n        <br />\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Start date</FormLabel>\r\n            <FormControl\r\n              type=\"date\"\r\n              onChange={(e) => handleChange(e, setUser1stExpStartDate)}\r\n              value={user1stExpStartDate}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> End date</FormLabel>\r\n            <FormControl\r\n              type=\"date\"\r\n              onChange={(e) => handleChange(e, setUser1stExpEndDate)}\r\n              value={user1stExpEndDate}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n\r\n        <h4 className=\"text-dark font-weight-bold py-4\">2nd Job</h4>\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Company Name </FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUser2ndCompanyName)}\r\n              value={user2ndCompanyName}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Job Role</FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUser2ndJobRole)}\r\n              value={user2ndJobRole}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          {/* <FormGroup as={Col} sm={12} md={4}> */}\r\n          <FormLabel> Job description</FormLabel>\r\n          <FormControl\r\n            as=\"textarea\"\r\n            onChange={(e) => handleChange(e, setUser2ndJobDesc)}\r\n            value={user2ndJobDesc}\r\n            required\r\n          />\r\n          {/* </FormGroup> */}\r\n        </Form.Row>\r\n        <br />\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Start date</FormLabel>\r\n            <FormControl\r\n              type=\"date\"\r\n              onChange={(e) => handleChange(e, setUser2ndExpStartDate)}\r\n              value={user2ndExpStartDate}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> End date</FormLabel>\r\n            <FormControl\r\n              type=\"date\"\r\n              onChange={(e) => handleChange(e, setUser2ndExpEndDate)}\r\n              value={user2ndExpEndDate}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n\r\n        <h1 className=\"text-dark font-weight-bold py-4\">Projects</h1>\r\n        <h4 className=\"text-dark font-weight-bold py-4\">1st Project</h4>\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Project Name </FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserProj1Name)}\r\n              value={userProj1Name}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Project Link </FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserProj1Link)}\r\n              value={userProj1Link}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          {/* <FormGroup as={Col} sm={12} md={4}> */}\r\n          <FormLabel> Project description</FormLabel>\r\n          <FormControl\r\n            as=\"textarea\"\r\n            onChange={(e) => handleChange(e, setUserProj1Description)}\r\n            value={userProj1Description}\r\n            required\r\n          />\r\n        </Form.Row>\r\n        <br />\r\n        <Form.Row>\r\n        </Form.Row>\r\n\r\n        <h4 className=\"text-dark font-weight-bold py-4\">2nd Project</h4>\r\n        <Form.Row>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Project Name </FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserProj2Name)}\r\n              value={userProj2Name}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          <FormGroup as={Col} sm={12} md={4}>\r\n            <FormLabel> Project Link </FormLabel>\r\n            <FormControl\r\n              type=\"text\"\r\n              onChange={(e) => handleChange(e, setUserProj2Link)}\r\n              value={userProj2Link}\r\n              required\r\n            />\r\n          </FormGroup>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          {/* <FormGroup as={Col} sm={12} md={4}> */}\r\n          <FormLabel> Project description</FormLabel>\r\n          <FormControl\r\n            as=\"textarea\"\r\n            onChange={(e) => handleChange(e, setUserProj2Description)}\r\n            value={userProj2Description}\r\n            required\r\n          />\r\n        </Form.Row>\r\n        <br />\r\n        <Button\r\n          variant=\"dark\"\r\n          type=\"button\"\r\n          as={Col}\r\n          sm={12}\r\n          className=\"py-3 my-3\"\r\n          onClick={handleUserResumeData}\r\n        >\r\n          Generate CV\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n","D:\\project\\CV-Generator\\frontend\\src\\components\\Loader.js",[],"D:\\project\\CV-Generator\\frontend\\src\\components\\CustomDatePicker.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":37,"column":9,"nodeType":"49","messageId":"50","endLine":37,"endColumn":22},{"ruleId":"47","severity":1,"message":"51","line":82,"column":9,"nodeType":"49","messageId":"50","endLine":82,"endColumn":23},{"ruleId":"47","severity":1,"message":"52","line":41,"column":22,"nodeType":"49","messageId":"50","endLine":41,"endColumn":35},{"ruleId":"47","severity":1,"message":"53","line":47,"column":22,"nodeType":"49","messageId":"50","endLine":47,"endColumn":35},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'handleOnPrint' is assigned a value but never used.","Identifier","unusedVar","'handleOnPrint1' is assigned a value but never used.","'setUser1stLoc' is assigned a value but never used.","'setUser2ndLoc' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]